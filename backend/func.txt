1. PessoaService
Para que serve: CRUD de pessoas (identificação base de todo o sistema).
Models: Pessoa
Services usados: –
Funções:

criar(pessoaDTO)
buscarPorId(id)
buscarPorCPF(cpf)
atualizar(id, updates)
deletar(id)
listarTodos()

2. UnidadeSaudeService
Para que serve: CRUD de unidades de saúde + listar funcionários por unidade.
Models: UnidadeSaude
Services usados: (opcional) FuncionarioService para listar alocados
Funções:

criar(unidadeDTO)
buscarPorId(id)
buscarPorNome(nome)
atualizar(id, updates)
deletar(id)
listarTodos()
listarFuncionariosPorUnidade(unidadeId)

3. FuncionarioService
Para que serve: CRUD de funcionários + realocação entre unidades.
Models: Funcionario
Services usados: PessoaService, UnidadeSaudeService
Funções:

criarFuncionario(nome,…,unidadeSaudeId,data_nascimento,sexo)
buscarPorId(id)
atualizarFuncionario(id,…,unidadeSaudeId)
deletarFuncionario(id)
realocarFuncionario(id,unidadeSaudeId)
listarTodos()
listarPorUnidade(unidadeId)
cpfExiste(cpf)

4. EnfermeiroService, MedicoService, FarmaceuticoService
Para que servem: extensão de FuncionarioService para cada especialidade.
Models: Enfermeiro / Medico / Farmaceutico
Services usados: FuncionarioService (CRUD básico),
PacienteService (se precisarem vincular também como pacientes)
Funções (cada um):

criarX(nome,…,unidadeSaudeId,data_nascimento,sexo,registro_especifico,…)
buscarPorId(id)
atualizarX(id,…,unidadeSaudeId,registro_especifico,…)
deletarX(id)
listarTodos()

5. PacienteService
Para que serve: CRUD de pacientes + buscas por CPF/Cartão SUS.
Models: Paciente
Services usados: –
Funções:

criar(pacienteDTO)
buscarPorId(id)
buscarPorCPF(cpf)
buscarPorCartaoSUS(cartao_sus)
atualizar(id, updates)
listarTodos()
deletar(id)

6. AuthService
Para que serve: autenticação via Supabase + autorização via AccessControlService.
Models: –
Services usados: AccessControlService
Funções:

login(email,senha)
logout()
validarToken(token)
verificarPermissao(token,acao,alvoUnidadeId?)

7. ConsultaService
Para que serve: agendamento e histórico de consultas.
Models: Consulta
Services usados: PacienteService, MedicoService
Funções:

criarConsulta(pacienteCartaoSUS,medicoId,dataHora,tipo)
buscarPorId(id)
listarPorPaciente(cartao_sus)
listarPorMedico(medicoId)
atualizarConsulta(id,updates)
cancelarConsulta(id)

8. QuartoService
Para que serve: gerenciamento de prontuários (anamnese, exames, prescrições, atestados, solicitações).
Models: Quarto
Services usados: PacienteService
Funções:

criarProntuario(cartao_sus,anamnese,examesObjetivos,prescricaoMedicamentos,atestados,solicitacaoExames)
buscarPorId(id)
buscarPorCartaoSUS(cartao_sus)
atualizarProntuario(id,updates)
deletarProntuario(id)
emitirAtestado(id)
solicitarExames(id,exames[])

9. PrescricaoService
Para que serve: CRUD de prescrições médicas + QR code + PDF.
Models: Prescricao, ItemPrescricao
Services usados: MedicoService, PacienteService, MedicamentoService, utilitários (qrCodeUtils, pdfPrescricaoUtils)
Funções:

criarPrescricao(medicoId,cartao_sus,problemaSaude,objetivosTerapeuticos,itens,instrucoesGerais)
buscarPorId(id)
listarPorPaciente(cartao_sus)
atualizarPrescricao(id,updates)
deletarPrescricao(id)
emitirReceitaPDF(id)
validarQRCode(qr)

10. MedicamentoService
Para que serve: CRUD de medicamentos.
Models: Medicamento
Services usados: –
Funções:

criarMedicamento(medicamentoDTO)
buscarPorId(id)
buscarPorNome(nome)
atualizar(id,updates)
listarTodos()
deletar(id)

11. ItemPrescricaoService
Para que serve: gerenciamento de itens dentro de uma prescrição (medicamento ou exame).
Models: ItemPrescricao
Services usados: PrescricaoService, MedicamentoService, ExameService (quando o item for exame)
Funções:

criarItemPrescricao(prescricaoId,medicamentoId|exameId,dosagem,frequencia,duracao,instrucoes)
listarPorPrescricao(prescricaoId)
atualizarItemPrescricao(id,updates)
deletarItemPrescricao(id)

12. EstoqueMedicamentoService
Para que serve: controle de entrada/saída de medicamentos nas unidades.
Models: EstoqueMedicamento
Services usados: MedicamentoService, UnidadeSaudeService
Funções:

adicionarEstoque(unidadeId,medicamentoId,quantidade)
removerEstoque(unidadeId,medicamentoId,quantidade)
consultarEstoque(unidadeId,medicamentoId)
listarEstoque(unidadeId?)
transferirEstoque(deUnidade,paraUnidade,medicamentoId,quantidade)

13. ExameService
Para que serve: gerenciamento de exames (solicitação, resultado, status).
Models: Exame
Services usados: ConsultaService, PacienteService
Funções:

solicitarExame(consultaId,tipoExame)
buscarPorId(id)
listarPorPaciente(cartao_sus)
listarPorConsulta(consultaId)
atualizarResultado(id,resultado)
atualizarStatus(id,status)

14. QuartoService & LeitoService
Para que servem: gestão de quartos e leitos nas unidades.
QuartoService
Models: Quarto, Leito
Services usados: LeitoService

Funções:

criarQuarto(quartoDTO)
listarQuartos()
buscarPorId(id)
atualizarQuarto(id,updates)
deletarQuarto(id)
adicionarLeito(quartoId,leitoId)
removerLeito(quartoId,leitoId)

LeitoService
Models: Leito
Services usados: –
Funções:

criarLeito(leitoDTO)
listarLeitos()
buscarPorId(id)
atualizarLeito(id,updates)
deletarLeito(id)
vincularQuarto(leitoId,quartoId)
desvincularQuarto(leitoId)

15. InternacaoService
Para que serve: fluxo de internação — entrada, transferência de leito e alta.
Models: Internacao
Services usados: PacienteService, MedicoService, LeitoService
Funções:

criarInternacao(cartao_sus,medicoId,leitoId,motivo)
buscarPorId(id)
listarPorPaciente(cartao_sus)
listarPorLeito(leitoId)
transferirInternacao(id,newLeitoId)
darAlta(id,dataSaida)
deletarInternacao(id)

16. LogAuditoriaService
Para que serve: registrar e consultar logs de operações para auditoria.
Models: LogAuditoria
Services usados: – (invocado por middlewares ou dentro de outros services)
Funções:

registrarLog(usuarioId,acao,detalhes)
listarLogs(filtros?)
buscarPorId(id)
